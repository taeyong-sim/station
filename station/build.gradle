plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}



group = 'com.station'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile "joda-time:joda-time:2.2"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' /* Thymeleaf Layout */
	implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0'
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	testCompile 'junit:junit:4.12'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.security:spring-security-test'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	testImplementation 'org.springframework.security:spring-security-test'
	compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16' /* Log4JDBC */
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5' /* Gson */
}

test {
	useJUnitPlatform()
}

jar {
	archivesBaseName = "station"
}


 apply plugin: 'io.spring.dependency-management'
 
 task copyAndChangeFile(type: Copy) {
  		from 'build/libs' 
  		into 'output_file' 
  		rename { String fileName ->
    		fileName.replace("input", "output") 
  		}
	}